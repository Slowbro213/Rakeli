var W={name:"help",exec:(y)=>{return console.log("Helped",y[1]),0}};var X=[W];var $=(y)=>{console.log("Building Commands...");let j={children:new Map};for(let C of y){let q=j;for(let z of C.name){if(!q.children.has(z))q.children.set(z,{children:new Map});q=q.children.get(z)}q.command=C}return j},Y=(y)=>{if(!y||J===null)return[];let j=J;for(let z of y){let D=j.children.get(z);if(!D)return[];j=D}function C(z){if(z.command&&z.command.name.startsWith(y))return z.command;for(let D of z.children.values()){let V=C(D);if(V)return V}return}let q=C(j);return q?[q]:[]},Z=(y)=>{if(!y||J===null)return;let j=J;for(let C of y){let q=j.children.get(C);if(!q)return;j=q}return j.command?.name===y?j.command:void 0},J=$(X);var O=document.getElementById("terminal-input"),_=document.getElementById("autocomplete");O.addEventListener("keydown",(y)=>{switch(y.key){case"Enter":{let j=O.value,C=j.split(" ");if(!j||!C||!C[0]){console.log(C[0]);break}let q=Z(C[0]);if(!q)break;q.exec(C),O.value="";break}default:{let j=O.value,C=Y(j);if(C.length===0||!C[0]||!C[0].name){_.innerHTML="";break}let q=C[0].name;_.innerHTML=q;break}}});
